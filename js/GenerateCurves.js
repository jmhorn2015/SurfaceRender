var extrudeSettings;
var bigData = [];
var texts;
function GenerateCurves(name){
	$.get(name,	function(data) {
		 texts = data.split(" ");
		 sub();
		})
		.fail(function() {
			alert( "error" );
			var texttemp;
			if(name == "data/seeding_curve_1.txt"){
				texttemp = "0.190476 0.873016 0.190476 0.19201 0.871349 0.210213 0.193835 0.869671 0.230059 0.195944 0.867969 0.249874 0.198085 0.866245 0.269685 0.199853 0.86503 0.289569 0.201428 0.864147 0.309487 0.203031 0.863454 0.329411 0.204813 0.863009 0.349327 0.206933 0.862671 0.369211 0.209414 0.862446 0.389055 0.212374 0.862398 0.408835 0.214943 0.862444 0.428669 0.217044 0.86249 0.448559 0.219105 0.862502 0.468452 0.221182 0.862442 0.488344 0.223254 0.862258 0.508235 0.225305 0.861928 0.528127 0.227463 0.86141 0.548004 0.229389 0.860706 0.567898 0.231242 0.859803 0.587792 0.233012 0.858746 0.607685 0.235104 0.856992 0.627498 0.237043 0.855265 0.647329 0.238269 0.854119 0.667258 0.236458 0.855543 0.687125 0.230812 0.862591 0.70497 0.219612 0.875009 0.715941 0.206579 0.889405 0.720725 0.199264 0.897142 0.737655 0.187549 0.909971 0.747563 0.17799 0.919791 0.76213 0.163421 0.932639 0.766893 0.157932 0.946747 0.779963 0.146054 0.958131 0.791336 0.132368 0.968937 0.80113 0.116059 0.980445 0.80239 0.100644 0.990388 0.79442,";
			}
			else{
				texttemp = "0.492064 0.539683 0.063492 0.499409 0.531180 0.080037 0.499872 0.531216 0.100032 0.501354 0.540619 0.117622 0.494704 0.547521 0.135176 0.483760 0.556159 0.149514 0.468275 0.566531 0.156770 0.451359 0.576804 0.153883 0.434859 0.581755 0.164042 0.422960 0.581716 0.180118 0.417283 0.574788 0.198000 0.422508 0.574618 0.217304 0.418191 0.571672 0.236609 0.417186 0.571976 0.256582 0.416635 0.572915 0.276552 0.418199 0.568621 0.296023 0.416528 0.565476 0.315703 0.420998 0.575178 0.332611 0.429485 0.583946 0.348458 0.438550 0.592331 0.364191 0.448525 0.602043 0.378549 0.460899 0.609194 0.392541 0.473818 0.614219 0.406957 0.487275 0.617967 0.421270 0.501298 0.620781 0.435250 0.514894 0.622947 0.449757 0.527953 0.624395 0.464836 0.540647 0.625348 0.480262 0.552685 0.625282 0.496233 0.562244 0.623645 0.513724 0.570172 0.621413 0.531949 0.575688 0.617576 0.550787 0.579223 0.617078 0.570466 0.580715 0.617722 0.590399 0.582626 0.617535 0.610307 0.582769 0.617640 0.630306 0.582681 0.618343 0.650294 0.585448 0.617768 0.670093 0.592518 0.615532 0.688668 0.605520 0.611164 0.703223 0.623523 0.605016 0.709395 0.642078 0.598660 0.705480 0.654173 0.594564 0.690087 0.654364 0.594470 0.670088 0.654666 0.594096 0.650094 0.655108 0.593376 0.630112 0.655639 0.592237 0.610152 0.656105 0.590630 0.590222 0.656098 0.588595 0.570326 0.655258 0.586347 0.550470 0.653814 0.584130 0.530646 0.652263 0.582092 0.510811 0.650917 0.580284 0.490938 0.649915 0.578739 0.471023 0.649270 0.577461 0.451074 0.648903 0.576436 0.431104 0.648729 0.575630 0.411121 0.648682 0.575002 0.391131 0.648719 0.574510 0.371137 0.648815 0.574121 0.351141 0.648955 0.573804 0.331144 0.649134 0.573537 0.311146 0.649352 0.573301 0.291149 0.649614 0.573084 0.271152 0.649924 0.572873 0.251155 0.650288 0.572657 0.231160 0.650703 0.572424 0.211166 0.651156 0.572155 0.191173 0.651629 0.571827 0.171181 0.652110 0.571419 0.151191 0.652600 0.570912 0.131203 0.653107 0.570289 0.111219 0.653654 0.569537 0.091241 0.654273 0.568640 0.071271 0.655007 0.567589 0.051312 0.655909 0.566383 0.031369 0.656975 0.565015 0.011444,";
			}
			texts = texttemp.split(" ");
			sub();
		});

	function sub(){
		var lineData = [];
		var prevPos = 0;
		var tempVal = 0;
		var counter = 0;
		var lineCounter = 0;
		var x = 0;
		var y = 0;
		var z = 0;
		for(var a = 0; a < texts.length; a++){
			if(texts[a].charAt(texts[a].length-1)!=','){
				counter++;
				tempVal = Number(texts[a]);
				prevPos = a+1;
				if(counter == 1){
					x = tempVal;
				}
				else if(counter == 2){
					y = tempVal;
				}
				else if(counter == 3){
					z = tempVal;
					lineData.push(new THREE.Vector3(x,y,z));
					counter = 0;
				}
			}
			else{
				tempVal = Number(texts[a].substring(0, texts[a].length-1));
				z = tempVal;
				lineData.push(new THREE.Vector3(x,y,z));
				var draw = new THREE.CatmullRomCurve3( lineData );
				bigData[lineCounter] = draw;
				lineCounter++;
				extrudeSettings = {
					steps: 40,
					bevelEnabled: false,
					extrudePath: draw
				};
				var geo = new THREE.ExtrudeBufferGeometry( circleShape, extrudeSettings );
				var mat = new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff , wireframe: false } );
				var mesh = new THREE.Mesh( geo, mat );
				mesh.name = "mesh";
				scene.add( mesh );
				lineData = [];
				counter = 0;
				prevPos = a+1;
			}
		}
	}
};